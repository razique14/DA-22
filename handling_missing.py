# -*- coding: utf-8 -*-
"""Handling missing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RUbq6SC9Zrk1zzUpvT406NNn7Lrqfkkf

Missing Handling
"""

import numpy as np
import pandas as pd

df = pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv')
df

df= pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv',skiprows=1)
 df

df= pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv',header=0)
df

df= pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv',header=None,names=['t','e','r','p','pnp'])
df

df= pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv',na_values=['n.a','not available'])
df

# df.isnull()
# df.isna().sum()
df.dropna()

df

df= pd.read_csv(r'/content/stock_data.csv - Sheet1 (1).csv',na_values={'eps':['not available',-1],'price':'n.a.','people':'n.a.'})
df

df.set_index('tickers',inplace=True)

df

"""back to csv"""

# df.to_csv('new_stock_data.csv')

# df.to_csv('new_stock_data.csv',columns=['tickers','eps'])

df.to_csv('new_stock_data.csv',index=False)
df

"""to excel"""

df =  pd.read_excel(r'/content/stock_data.xlsx - Sheet1 (1).')
 df = pd.read_excel(r'/content/stock_data.xlsx - Sheet1 (1).')

df.to_excel(r'/content/stock_data.xlsx,'new1',index=False,startrow=1,startcol=0')

df = pd.read_excel(r'/content/stock_data.xlsx 'new1')

df_stocks = pd.DataFrame({
    'tickers': ['GOOGL', 'WMT', 'MSFT'],
    'price': [845, 65, 64 ],
    'pe': [30.37, 14.26, 30.97],
    'eps': [27.82, 4.61, 2.12]
})

df_weather =  pd.DataFrame({
    'day': ['1/1/2017','1/2/2017','1/3/2017'],
    'temperature': [32,35,28],
    'event': ['Rain', 'Sunny', 'Snow']
})

df_stocks

df_weather

with pd.ExcelWriter('stocks.xlsx') as f:
  df_stocks.to_excel(f,'stocks1')
  df_weather.to_excel(f,'stocks2')

# quetion
day,temperature,windspeed,event
1/1/2017,32,6,Rain
1/4/2017,,9,Sunny
1/5/2017,28,,Snow
1/6/2017,,7,
1/7/2017,32,,Rain
1/8/2017,,,Sunny
1/9/2017,,,
1/10/2017,34,8,Cloudy
1/11/2017,40,12,Sunny

import numpy as np
import pandas as pd

df = pd.read_csv('/content/weather_by_cities.csv')
df

df = pd.read_csv('/content/weather_by_cities.csv',parse_dates=['day'])  #format of day changes
df

df.mean()

166/5

42/5

df= df.fillna({'temperature': 0,'windspeed':0,'event':'no event'})
df

df.fillna(method='ffill')

df.fillna(method='bfill')

df

# df
# df.dropna()
# df.dropna(how ='all')
# df = df.iloc[:,1:].dropna(how ='all')
df

df.dropna(thresh=2)

df

df.interpolate()



df = pd.read_csv('/content/weather_by_cities.csv')

df

df= df.groupby('city')
df

for i , data  in df:
 print(i)
 print(data,end='\n\n\n')

# df.get_group('paris')
# df.get_group('new york').mean()
mumbai =df.get_group('new york')
mumbai.mean()

mumbai.describe()

df.count()

df.size()

df.describe()

df

df.max()

df.min()

# tp =df.groupby('temperature')
# tp = df.groupby()
# tp

# Days when temperature was between 80 and 90 
for i , data  in tp:
   if 80<=i<=90:
     print(i)
     print(data,end='\n\n\n')

# Print dataframe groups of below given conditions?
# Days when temperature was between 80 and 90
# Days when it was between 50 and 60
# Days when it was anything else

def group (df,c,x):
  if (df[c][x]>= 80) and (df[c][x]<=90):
    return '80-90'
  elif (df[c][x]>= 50) and (df[c][x]<= 60):
    return '50-90'
  else:
    return 'anything else'

df = df.groupby(lambda x: group(df,'temperature',x))
df

# df['temprature'].loc[0]
for i,j in df:
  # print(i)
  print(j)

import pandas as pd

# India weather 
{
    "city": ["mumbai","delhi","banglore"],
    "temperature": [32,45,30],
    "humidity": [80, 60, 78]
}

df =pd.DataFrame({
    "city": ["mumbai","delhi","banglore"],
    "temperature": [32,45,30],
    "humidity": [80, 60, 78]
})

df

# Us weather
{
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
    "humidity": [68, 65, 75]
}

df1=pd.DataFrame({
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
    "humidity": [68, 65, 75]
})

df1

df2 = pd.concat([df,df1])
df2

# df2 = pd.concat(([df,df1]),ignore_index=True,keys=[df,df1])
df3 = pd.concat([df,df1],keys=['df','df1'])
df3

data =pd.Series([1,2,3,4,5,6],name='precipitation')
data

df5 = pd.concat([df2,data],axis=1)
df5

india_weather2=pd.DataFrame({
    "city": ["mumbai","delhi","manglore","patna"],
    "temperature": [21,14,35,32],
    "precipitation": [68, 65, 75,79]
})
india_weather2

df1=pd.concat([df,india_weather2],axis=1)
df1

df2=pd.concat([df,india_weather2],axis=0)
df2

"""Merge"""

{
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
}

df =pd.DataFrame({
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
})

df

df1 = pd.DataFrame({
    "city": ["chicago","new york","zurich"],
    "humidity": [65,68,75],
})

df1

pd.concat([df,df1],axis=1)

pd.merge(df,df1)

# pd.merge(df,df1,on='city',how='inner')
# pd.merge(df,df1,on='city',how='outer')
# pd.merge(df,df1,on='city',how='left')
# pd.merge(df1,df,on='city',how='left')
# pd.merge(df,df1,on='city',how='right')
pd.merge(df1,df,on='city',how='right')

pd.concat([df1,df2],axis=1)
# pd.concat([df1,df2],axis=0)

df

df1

pd.merge(df,df1,on='city',how='outer',indicator=True)

df = pd.DataFrame({
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
    "humidity": [65,68,75],

})
df

df1 = pd.DataFrame({
    # "states": ["ap","bihar","Telangana"],
    "city": ["chicago","new york","orlando"],
    "temperature": [32,42,37],
    "humidity": [64,78,72],
})
df1

pd.merge(df,df1,on='city',how='outer',indicator=True,suffixes=['_df','_df1'])

df.join(df1,lsuffix='_l',rsuffix='_r')

"""Pivot"""

df = pd.DataFrame({
    "city": ["new york","chicago","orlando"],
    "temperature": [21,14,35],
    "humidity": [65,68,75],

})
df

df1 = pd.DataFrame({
    # "states": ["ap","bihar","Telangana"],
    "city": ["chicago","new york","orlando"],
    "temperature": [32,42,37],
    "humidity": [64,78,72],
})
df1

# df1=df1.set_index('city')
df1

df1

# df1.pivot(columns='city')
df1.pivot(index='city',columns='humidity')

df1.T
# df1



"""problems

set-1
"""

df = pd.read_csv('/content/weather_by_cities.csv')
df

# df.pivot(index='temperature', columns ='city',values ='temperature')
df.pivot(index='temperature', columns ='city',values ='windspeed')

"""Pivot_method"""

df.pivot_table(index='city',columns='date',margins=True)

df.pivot_table(index='city',columns='date',margins=True,aggfunc=sum)

"""set-2"""

df1 = pd.read_csv('/content/weather2.csv')
df1

# df1.pivot(columns='city')
df1.pivot(index='temperature', columns ='city')

"""set-3"""

df2=pd.read_csv('/content/weather3.csv')
df2

# df2.pivot(columns='city')
df2.pivot(index='temperature', columns ='city')

"""Melt"""

import pandas as pd
df = pd.read_csv('/content/weather_by_cities.csv')
df

pd.melt(df)

pd.melt(df,id_vars=['day'],var_name='city',value_name = 'temperature')

"""Stack"""

df.stack()

"""new problem"""

df = pd.read_excel('/content/stocks_3_levels.xlsx',skiprows=2)
# df = pd.read_excel('/content/stocks_3_levels.xlsx',header=[0,1])
df

df.stack()

df.stack(level=0)

df.stack(level=1)