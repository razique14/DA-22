# -*- coding: utf-8 -*-
"""Python assignment-2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iRjBHjEwx9pnFwFo8_XKcR9ssXZbtXTc
"""

#1. Confirm whether given number is a 3 digit number? 
a = int(input('enter a number'))
if (a>99) and (a<1000):
  print('it is a 3 digit number')
  
else:
    print('it is not a 3 digit number')

#2. Confirm whether given number is an 'N' digit number?
# (Input should not be string)
a = int(input('enter a number: '))
b = str(a)
c = len(b)
print(f'it is {c} digit number')

#3 Find whether a given number is a prime number or not?
a = int(input('enter a number'))
if(a==0) or (a==1):
  print('neither prime nor composite')
elif(a>1):
  for i in range(2,a):
    if((a%i)==0):
      print('a is not a prime number')
      break
  else:
      print('prime number')

#4. Write a python programm to compute the distance between the points(x1,y1) and (x2,y2) ?
x1=float(input('enter the value'))
x2=float(input('enter the value'))
y1=float(input('enter the value'))
y2=float(input('enter the value'))
print(((x2 - x1)**2 +(y2 - y1)**2)**0.5)

#5  Write a program to calculate body mass index?
a = float(input('enter weight in kilogram'))
b = float(input('enter height in feet'))
c = (a/(b*b))

print('your body mass index is',c)

#6  Write a program to filter the positive numbers from a list?
a = [1,-4,6,-12,4,8,2]
positive_numbers = [number for number in a if number>=0]
print(positive_numbers)

#7  Write a program to test whether a passed letter is a vowel or not?
l = input('enter a character')
if l.lower() in ('a','i','e','o','u'):
  print('vowel')
elif l.upper() in ('A','E','I','O','U'):
  print('vowel')
else:
    print('consonant')

z = ('a','e','i','o','u','A','E','I','O','U')
for i in z

#8. WAP to Check whether given year is a leap year or not?
a = int(input('enter a year'))
if ((a%4)==0):
  print('it is a leap year')
else:
    print('it is not a leap year')

#9. WAP to check whether given string is a palindrome or not?
#    // EX: MADAM //Palindrome
#            ANT  // Not a palindrome

a = input(("Enter a word:"))  
if(a==a[::-1]):  
      print("The letter is a palindrome")  
else:  
      print("The letter is not a palindrome")

#10. WAP to delete all the positive numbers from the arr
#    //Note : Do not create separate list, Remove the positive elements from the existing array.
#    // Ex: input: [2,-1,-5.6,4,89,43,-35,09]
#           output: [-1,-5.6,-35]
a = [2,-1,-5.6,4,89,43,-35,9]
negative_numbers = [number for number in a if number<=0 ]
print(negative_numbers)

#11. WAP to remove duplicates from the given list?
#    // Ex: input: [2,21,-5.6,21,89,43,-5,09,2,34,43]
#           output:  [2,21,-5.6,89,34,-5,09,43]

a = [2,21,-5.6,21,89,43,-5,9,2,34,43]
dup_items = set()
uniq_items = []
for x in a:
    if x not in dup_items:
        uniq_items.append(x)
        dup_items.add(x)

print(dup_items)

"""PATTERNS"""

#1. Print the Patterns
# * * * * *
# * * * *
# * * * 
# * *
# *
a = 6
for i in range(1,6):
   print('*' ' '*(a-i))

def raw(a):
  a = int(input('enter a number'))
  for i in range(5,0,-1):
    print(' *'*i)
raw(6)

# while loop
def raw():
 i = 5
 while i in range(5,0,-1):
  print(i*' * ')
  i-=1
raw()

#2. Print the Patterns
#     *
#    **
#   ***
#  ****
# ***** 
b= 5
for i in range(1,6):
  print(' '*b,'*'*i)
  b=b-1

def raw(b):
  for i in range(1,6):
    print(' '*b,'*'*i)
    b=b-1
raw(5)

# while loop 
def raw():
  b = 4
  i = 1
  while i in range(1,6):
    print(' '*b,'*'*i)
    i=i+1
    b=b-1
raw()

#3. Print the Patterns
#     *
#    ***
#   *****
#  *******
# *********
star = 10
space = 5
for i in range(1,star, 2):
  print((' '*space)+('*'*i))
  space = space-1

def raw(star,space):
  for i in range(1,star,2):
    print((' '*space)+('*'*i))
    space=space-1
raw(10,5)

# while loop
def raw(a):
  a = 5
  i = a-1
  while i>=0:
    j=0
    while j<1:
      print('',end=' ')
      j+=1
    k=i
    while k<=a-1:
      print('*',end=' ')
      k+=1
    print('')
    i-=1
raw(9)

#4. Print the Patterns
# *********
#  ******* 
#   *****  
#    ***   
#     *
space = 5
star = 9
for i  in range(star,0,-2):
  print((' '*space)+('*'*i))
  space = space+1

def raw(sapce,star):
  space = 5
  star = 9
  for i  in range(star,0,-2):
   print((' '*space)+('*'*i))
   space = space+1
raw(5,9)

# while loop
def raw():
  a = 5
  i = 1
  while i<=a-1:
    j =0
    while j<i:
      print('',end=' ')
      j+=1
      k=i
      while k<=a-1:
        print('*',end=' ')
        k+=1
        print()
        i+=1
raw()

#5. Print the Patterns
# 1
# 11
# 111
# 1111
# 11111

for i in range(1,6):
    print('1'*i)

def raw(a):
  a = int(input('enter a number'))
  for i in range(1,a+1):
    print('1'*i)
raw(1)

# while loop
def raw():
  a = int(input('enter a number'))
  i = 1
  while i in range(1,a+1):
    print('1'*i)
    i+=1
raw()

#6. print the patterns
1
12
123 
1234
12345
123456
1234567
12345678

a = int(input('enter the rows'))
for i in range(a):
  for j in range(i+1):
    print(j+1,end='')
  print('\n')

def raw(a,b):
  a = ''
  b = int(input('enter a number'))
  i = 1
  while i in range(1,b+1):
    a = a+str(i)
    print(a)
    i=i+1
raw(1,8)

def raw():
  a = 8
  for i in range(1,a+1):
    for j in range(1,i+1):
      print(j,end='')
    print('')
raw()

#7. Print the Patterns
# 2  9
# 3  8
# 4  7
# 5  6
# 6  5
# 7  4
# 8  3
# 9  2
# 10 1

b = 10
for i in range(2,11):
 b=b-1
 print(i,b)

def raw():
  b = 10
  for i in range(2,11):
    b=b-1
    print(i,b)
raw()

def raw():
 i = 2
 b = 10
 while i in range(2,11):
  b=b-1
  print(i,b)
  i = i+1
raw()

#8. Print the Patterns
# 0 * 9 + 8        = 8
# 9 * 9 + 7        = 88
# 98 * 9 + 6       = 888
# 987 * 9 + 5      = 8888
# 9876 * 9 + 4     = 88888
# 98765 * 9 + 3    = 888888
# 987654 * 9 + 2   = 8888888
# 9876543 * 9 + 1  = 88888888
# 98765432 * 9 + 0 = 888888888

a = 9
b = 8
c = ''
i = 0
while i in range(9,2,-2):
    c+=a
print(f'{c}*9+{b} = {i*9+b}')
a-=1

#9. Print the Patterns
1
22
333
4444
55555
a =int(input('Enter numbers of rows: '))  
i=1
j=0
while i in range(1,a+1):
 Value=j+1
 V=str(Value)
 print(V*i)
 i=i+1
 j=j+1

def raw():
  for i in range(0,5):
    for j in range(0,i+1):
      print(i+1,end='')
    print()
raw()

#10. Print the Patterns
54321
4321
321
21
1
b=7
for i in range(1,6):
  b=b-1
  c=''
  for j in range(1,b):
    c=c+str(j)
    z=c[::-1]
  print(z)

def raw():
 b=7
 for i in range(1,6):
  b=b-1
  c=''
  for j in range(1,b):
    c=c+str(j)
    z=c[::-1]
  print(z)
raw()



#11. Print the Patterns
# 1
# 2  3
# 4  5  6
# 7  8  9  10
# 11 12 13 14 15
a = int(input('enter the rows'))
b = 1
for i in range(1,a+1):
  for j in range(1,i+1):
    print(b,end=' ')
    b=b+1
  print()

def raw():
 a = int(input('enter the rows'))
 b = 1
 for i in range(1,a+1):
   for j in range(1,i+1):
    print(b,end=' ')
    b=b+1
   print()
raw()

# 12. print the patterns
# 1  2  3  4  5
# 6  7  8  9
# 10 11 12
# 13 14
# 15
rows = 5
num = 1
for i in range(5, 0, -1):
    for j in range(0, i):
        print(num, end='  ')
        num+=1
    print('\r')

def raw():
  rows = 5
num = 1
for i in range(5, 0, -1):
    for j in range(0, i):
        print(num, end='  ')
        num+=1
    print('\r')
raw()

#13. Print the Patterns
# 1
# 2 4
# 3 6 9
# 4 8 12 16
# 5 10 15 20 25
# 6 12 18 24 30 36
# 7 14 21 28 35 42 49
# 8 16 24 32 40 48 56 64
# 9 18 27 36 45 54 63 72 81
# 10 20 30 40 50 60 70 80 90 100
rows = 10
# rows = int(input("Enter the number of rows "))
for i in range(1, rows + 1):
    for j in range(1, i + 1):
        c = i * j
        print(i * j, end='  ')
    print()

def raw():
  rows = 10
  for i in range(1, rows + 1):
     for j in range(1, i + 1):
        c = i * j
        print(i * j, end='  ')
     print()
raw()

# 14. print the patterns
#              1    
#            2 3
#          4 5 6
#       7 8 9 10
# 11 12 13 14 15   
b = 5
for i in range(1,6):
  print(' '*b,''*i)
  b=b+1

n = int(input('enter a number'))
for i in range(n):
  for j in range(n-i-1):
    print('',end='')
    for jn in range(i,-1,-1):
      print(n+j,end='')
    print()

#15. Print the Patterns
# A
# AB
# ABC
# ABCD
# ABCDE

a = ['A','B','C','D','E']     
b = ''
for i in range(len(a)):
  b+=a[i]
  print(b)

def raw():
 a = ['A','B','C','D','E']     
 b = ''
 for i in range(len(a)):
   b+=a[i]
   print(b)
raw()

#16. Print the Patterns
#   A
#  ABC
# ABCDE
n = 3  
for i in range(n):
  for j in range(n-i-1):
    print(' ', end='')
  for k in range(2 * i +1):
    print(chr(65+k), end='')
  print()

def raw():
 n = 3  
 for i in range(n):
   for j in range(n-i-1):
    print(' ', end='')
    for k in range(2 * i +1):
     print(chr(65+k), end='')
   print()
raw()

#17. Print the Patterns
# A 
# A A 
# A A A 
# A A A A 
# A A A A A
for i in range(1,6):
  print('A'' '*i)

def raw():
 for i in range(1,6):
  print('A'' '*i)
raw()

i = 1
while i in range(1,6):
  print('A'' '*i)
  i=i+1