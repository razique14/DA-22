# -*- coding: utf-8 -*-
"""new assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jatOIbB7xNJ7ZE0_JdCJuHeIAXV3suNT
"""

1.Command to find the length of string without using string?
a = 'codeforindia'
count=0
for i in a:
    count = count+1
print('length of the string')
print(count)

# 2.Write a function to write whether given input is valid or invalid?
 
a = input('enter a syntax')
if (a.isalnum() or _):
   print('valid')
 
else:
     print('invalid')

# 3. check whether  given input is tilte case or camel case or snake case?

a = input('enter the string')
if(a==a.title()):
  print('title case')
else:
  print('not a title case')

# 4. convert given input to title case?
a = 'code for india'
print(a.title())

# 5.check whether given input is camel case or not?
a = input('enter a syntax')
b = a.split()
for i in b[1:]:
   if (i[0]==i[0].upper()) and (i[1:]==i[1:].lower()):
      print('camel case')
      break
   else:
      Print('not a camel case')
      break

# 6. convert given input to camel case?

# a='codeforindia'
from re import sub
def camel_case(s):
  s = sub(r"(_|-)+", " ", s).title().replace(" ", "")
  return ''.join([s[0].lower(), s[1:]])
print(camel_case('learnpython'))

# 7.check wether given input is snake case or not?
a='codeforindia'
for i in a:
  if i=='_':
    print('snake case')
    break
  else:
    print('not a snake case')
    break

#8. Convert given input to snake case?

def snake_case(str):
   a = [str[0].upper()]
   for i in str[1:]:
     if i in ('codeforindia'):
       a.append('_')
       a.append(i.upper())
     else:
       a.append(i)
     return''.join(a)
str = 'welcometopython'
print(snake_case(str))

# 9. blog on q8 
#python presidency

# 10. wap to replace q15 without using replace?
a = 'hey miss! welcome to python'
b = a.split()
b[1]= 'mam'
b[4]= 'c'
print(b)

# 11. wap q17 without using count?
X = 'All apples are red in color and round in shape'
# X.find('A')
X.find('a')

# 12. wap q22 using while loop
fruits = ["apple","orange","kiwi"] 
i=0
while i in range(len(fruits)):
  print(fruits[i])
  i+=1

# 13. wap q23 using both loop
# while loop
i = 1
while (i<=10):
   print(6,'x',i,'=',6*i)
   i+=1
# for loop
for i in range(1,11):
  print(6,'x',i,'=',6*i)

# 14. wap q24 without using exponential.
import math
a = int(input('enter base value'))
b = int(input('enter power value'))
print(math.pow(a,b))

# 15.wap q28 without using membership operator?
a = ['white','black','grey']
b = a.count('red')
if b>0:
 print('red is in the list')
else:
 print('red is not in the list')

# 16. wap q31 without using alnum().?
import re 
a = 'code34'
if re.match('^[0-9]*$',a):
  print('a contains only number')
else:
  print('a contains alphanumeric')

# 17. wap to solve q32 without using split.

a = ['he','she','we']
print(''.join(a))

# 18. wap to solve q32 string to list.
a = 'he she we'
list_1 = a.split(' ')
print(list_1)

# 19. wap to solve q33
a = [1,2,2,[2,3],5]
b = int(input('enter a number'))
for i in range(len(a)):
  if (type(a[i]) == list):
    for j in range(len(a[i])):
      if (a[i][j]==b):
        print(i,j)
        break
  else:
    if(a[i]==b):
      print(i)
      break


else:
  print('not there')

# 20.wap to transpose of matrix

X = [[4,7],
    [4 ,5],
    [3 ,2]]

result = [[0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]

for r in result:
   print(r)

#  Program to transpose a matrix using list comprehension

X = [[12,7],
    [4 ,5],
    [3 ,8]]
    
[[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]

# 21.wap to find addition of matrices
A = [[1,2,3],
     [4,5,6],
     [7,8,9]]

B = [[9,8,7],
     [6,5,4],
     [3,2,1]]


[A[i][j]+B[i][j] for j in range(len(A[0])) for i in range(len(A))]

# 22. Program to multiply two matrices using nested loops

X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]

Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]

result = [[0,0,0],
         [0,0,0],
         [0,0,0]]

for i in range(len(X)):
  
   for j in range(len(Y[0])):
       
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]

for r in result:
   print(r)

#23.wap to find inverse of matrices
import numpy 
a = numpy.array([[1,3],[4,6]])
b = numpy.linalg.inv(a)
print('Inverse matrix')
print(b)

# 24.wap to find if duplicates exist or not in list

a = [2,21,-5.6,21,89,43,-5,9,2,34,43]
b = set(a)
if len(a) != len(b):
  print('duplicates in the list')
else:
  print('not in the list')

# 25.wap to find if duplicates exists print values of duplicates ?
a = [2,21,-5.6,21,89,43,-5,9,2,34,43]
b = []
for i in a:
  if i  not in b:
    b.append(i)
  else:  
    print(i,end=' ')

# 26.wap to remove duplicates from a list?

a = [2,21,-5.6,21,89,43,-5,9,2,34,43]
dup_items = set()
uniq_items = []
for x in a:
    if x not in dup_items:
        uniq_items.append(x)
        dup_items.add(x)

print(dup_items)

# 27 make them unique
l = [5, 3, 5, 2, 1, 6, 6, 4] 
nl = [] 
dl = [] 
for i in l:
    if i not in nl:
        nl.append(i)
    else:
        dl.append(i) 
print("List of duplicates", dl)
print("Unique Item List", nl)

# 28.check whether list elements in ascending or descending order or random ?(with duplicates and without duplicates) 

a = [2,85,4,45,32,6,9]
if a.sort():  
   print('list is in ascending order')
else:   
   print('random')